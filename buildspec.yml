# buildspec.yaml
version: 0.2

phases:
  build:
    commands:
      
      - mkdir -p zap_artifacts
      - chmod 777 zap_artifacts   # make sure container user can write
      
      # install the latest Snyk CLI from GitHub Releases
      - latest_version=$(curl -Is "https://github.com/snyk/cli/releases/latest" | grep "^location" | sed 's#.*tag/##g' | tr -d "\r")
      - snyk_cli_dl_linux="https://github.com/snyk/cli/releases/download/${latest_version}/snyk-linux"
      - curl -Lo /usr/local/bin/snyk $snyk_cli_dl_linux
      - chmod +x /usr/local/bin/snyk

      # authenticate the Snyk CLI
      - snyk auth 698fb731-8127-4e79-b726-690046985251
      
      # perform a Snyk SCA scan; continue if vulnerabilities are found
      # --- Snyk Open Source (SCA): keep going even if vulns ---
      - snyk test --json-file-output=reports/snyk-oss.json || true

      # --- Snyk Code (SAST): fail only on HIGH+; keep SARIF report ---
      - snyk code test --severity-threshold=high --sarif-file-output=reports/snyk-code.sarif || true

      # --- Snapshot to Snyk UI (non-blocking) ---
      - snyk monitor || true

       # Run ZAP Baseline scan using the Docker image
      - echo 'dckr_pat_mrDB1WSkwdIc8tT_P4N7NDam2tI' | docker login -u gayathritdocker --password-stdin docker.io
      - docker run --rm -u 0:0 -v "$(pwd)/zap_artifacts":/zap/wrk/ zaproxy/zap-stable:latest zap-baseline.py -m 5 -t http://23.20.209.45:9005/students -r zap_baseline_report.html || true

      # For API scans, you'd typically provide an OpenAPI/Swagger definition
      # Example for API scan with OpenAPI:
      - docker run --rm -u 0:0 -v "$(pwd)/zap_artifacts":/zap/wrk/:rw zaproxy/zap-stable zap-api-scan.py  -t http://23.20.209.45:9005/swagger.json -f openapi -r zap_api_report.html || true

artifacts:
  files:
    - 'zap_api_report.html'
    - 'zap_baseline_report.html'
